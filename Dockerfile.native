####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode.
#
# Before building the container image run:
#
# ./mvnw package -Dnative
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.native -t quarkus/contact-with-quarkus .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/contact-with-quarkus
#
###

# -------- Etapa de build: Nativo con GraalVM --------
FROM quay.io/quarkus/ubi9-quarkus-mandrel-builder-image:jdk-21 AS builder
#FROM quay.io/quarkus/ubi-quarkus-native-image:22.3-java17 AS builder

WORKDIR /app

COPY pom.xml mvnw ./
COPY .mvn .mvn/
COPY src src/

ARG NATIVE_EXECUTABLE_NAME=application

RUN ./mvnw clean package -Pnative -DskipTests -Dquarkus.package.output-name=${NATIVE_EXECUTABLE_NAME}

# -------- Etapa de runtime: estándar (UBI minimal) --------
FROM registry.access.redhat.com/ubi9/ubi-minimal

WORKDIR /app
ARG NATIVE_EXECUTABLE_NAME=application

# Instalar dependencias mínimas

RUN microdnf update && \
    microdnf install -y shadow-utils && \
    microdnf clean all && \
    rm -rf /var/cache/yum

# Crear usuario no root
RUN useradd -u 1001 -r -g root appuser

# Copiar el ejecutable desde el builder
COPY --from=builder /app/target/${NATIVE_EXECUTABLE_NAME}-runner /app/${NATIVE_EXECUTABLE_NAME}

RUN chmod 755 /app/${NATIVE_EXECUTABLE_NAME}

EXPOSE 8080

USER 1001
#USER appuser

#CMD ["/app/application"]
ENTRYPOINT ["./application"]

#FROM registry.access.redhat.com/ubi8/ubi-minimal:8.10
#WORKDIR /work/
#RUN chown 1001 /work \
#    && chmod "g+rwX" /work \
#    && chown 1001:root /work
#COPY --chown=1001:root target/*-runner /work/application
#
#EXPOSE 8080
#USER 1001
#
#ENTRYPOINT ["./application", "-Dquarkus.http.host=0.0.0.0"]
